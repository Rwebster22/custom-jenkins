{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "jenkins-persistent-latest",
    "creationTimestamp": null,
    "annotations": {
      "openshift.io/display-name": "Jenkins (persistent) - Latest",
      "description": "Jenkins service, wit persistent storage.
      "iconClass": "icon-jenkins",
      "tags": "instant-app,jenkins"
    }
  },
  "message": "A Jenkins service has been created in your project.  Log into Jenkins with your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md contains more information about using this template.",
  "objects": [
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${JENKINS_SERVICE_NAME}",
        "creationTimestamp": null
      },
      "spec": {
        "to": {
          "kind": "Service",
          "name": "${JENKINS_SERVICE_NAME}"
        },
        "tls": {
          "termination": "edge",
          "insecureEdgeTerminationPolicy": "Redirect"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${JENKINS_SERVICE_NAME}",
        "creationTimestamp": null
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "jenkins"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${JENKINS_IMAGE_STREAM_TAG}",
                "namespace": "${NAMESPACE}"
              },
              "lastTriggeredImage": ""
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${JENKINS_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "name": "${JENKINS_SERVICE_NAME}"
            }
          },
          "spec": {
            "serviceAccountName": "${JENKINS_SERVICE_NAME}",
            "containers": [
              {
                "name": "jenkins",
                "image": " ",
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/login",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                    "timeoutSeconds": 3,
                    "initialDelaySeconds": 420,
                    "failureThreshold" : 30,
                    "httpGet": {
                        "path": "/login",
                        "port": 8080
                    }
                },
                "env": [
                  {
                    "name": "OPENSHIFT_ENABLE_OAUTH",
                    "value": "${ENABLE_OAUTH}"
                  },
                  {
                    "name": "OPENSHIFT_ENABLE_REDIRECT_PROMPT",
                    "value": "true"
                  },
                  {
                    "name": "KUBERNETES_MASTER",
                    "value": "https://kubernetes.default:443"
                  },
                  {
                    "name": "KUBERNETES_TRUST_CERTIFICATES",
                    "value": "true"
                  },
                  {
                    "name": "JNLP_SERVICE_NAME",
                    "value": "${JNLP_SERVICE_NAME}"
                  },
                  {
                    "name": "INSTALL_PLUGINS",
                    "value": "${INSTALL_PLUGINS}"
                  }
                ],
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${JENKINS_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/jenkins"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "IfNotPresent",
                "capabilities": {},
                "securityContext": {
                  "capabilities": {},
                  "privileged": false
                }
              }
            ],
            "volumes": [
              {
                "name": "${JENKINS_SERVICE_NAME}-data",
                "emptyDir": {
                  "medium": ""
                }
              }
            ],
            "restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"
          }
        }
      }
    },
    {
      "kind": "ServiceAccount",
        "apiVersion": "v1",
        "metadata": {
            "name": "${JENKINS_SERVICE_NAME}",
            "annotations": {
		"serviceaccounts.openshift.io/oauth-redirectreference.jenkins": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"${JENKINS_SERVICE_NAME}\"}}"
            }
        }
    },
    {
      "kind": "RoleBinding",
      "apiVersion": "v1",
      "metadata": {
          "name": "${JENKINS_SERVICE_NAME}_edit"
      },
      "groupNames": null,
      "subjects": [
          {
              "kind": "ServiceAccount",
              "name": "${JENKINS_SERVICE_NAME}"
          }
      ],
      "roleRef": {
          "name": "edit"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${JNLP_SERVICE_NAME}"
      },
      "spec": {
        "ports": [
          {
            "name": "agent",
            "protocol": "TCP",
            "port": 50000,
            "targetPort": 50000,
            "nodePort": 0
          }
        ],
        "selector": {
          "name": "${JENKINS_SERVICE_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      }
    },
    {
       "kind": "Service",
       "apiVersion": "v1",
       "metadata": {
         "name": "${JENKINS_SERVICE_NAME}",
         "annotations": {
           "service.alpha.openshift.io/dependencies": "[{\"name\": \"${JNLP_SERVICE_NAME}\", \"namespace\": \"\", \"kind\": \"Service\"}]",
           "service.openshift.io/infrastructure": "true"
         },
         "creationTimestamp": null
       },
       "spec": {
         "ports": [
           {
             "name": "web",
             "protocol": "TCP",
             "port": 80,
             "targetPort": 8080,
             "nodePort": 0
           }
         ],
         "selector": {
           "name": "${JENKINS_SERVICE_NAME}"
         },
         "type": "ClusterIP",
         "sessionAffinity": "None"
       }
    }
  ],
  "parameters": [
    {
      "name": "JENKINS_SERVICE_NAME",
      "displayName": "Jenkins Service Name",
      "description": "The name of the OpenShift Service exposed for the Jenkins container.",
      "value": "jenkins"
    },
    {
      "name": "JNLP_SERVICE_NAME",
      "displayName": "Jenkins JNLP Service Name",
      "description": "The name of the service used for master/slave communication.",
      "value": "jenkins-jnlp"
    },
    {
      "name": "ENABLE_OAUTH",
      "displayName": "Enable OAuth in Jenkins",
      "description": "Whether to enable OAuth OpenShift integration. If false, the static account 'admin' will be initialized with the password 'password'.",
      "value": "true"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the container can use.",
      "value": "2048Mi"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Jenkins ImageStream Namespace",
      "description": "The OpenShift Namespace where the Jenkins ImageStream resides.",
      "value": "openshift"
    },
    {
      "name": "JENKINS_IMAGE_STREAM_TAG",
      "displayName": "Jenkins ImageStreamTag",
      "description": "Name of the ImageStreamTag to be used for the Jenkins image.",
      "value": "jenkins:latest"
    },
    {
      "name": "INSTALL_PLUGINS",
      "displayName": "List of plugins to install in Jenkins",
      "description": "List of plugins (plugin:version) to install in Jenkins. The list should be comma-separated (i.e. blueocean:1.0.1, javadoc:1.6)",
      "value": "slack, Plugin:kubernetes-credentials, Plugin:antisamy-markup-formatter, Plugin:docker-workflow, Plugin:ssh-slaves, Plugin:credentials-binding, Plugin:junit, Plugin:github-branch-source, Plugin:display-url-api, Plugin:ssh-credentials, Plugin:ace-editor, Plugin:thinBackup, Plugin:workflow-remote-loader, Plugin:pipeline-milestone-step, Plugin:build-timestamp, Plugin:pipeline-utility-steps, Plugin:blueocean-pipeline-editor, Plugin:gitlab-plugin, Plugin:blueocean-events, Plugin:command-launcher, Plugin:ldap, Plugin:cloudbees-bitbucket-branch-source, Plugin:openshift-client, Plugin:run-condition, Plugin:m2release, Plugin:scm-api, Plugin:script-security, Plugin:git, Plugin:pipeline-model-definition, Plugin:kubernetes, Plugin:snakeyaml-api, Plugin:jsch, Plugin:extended-read-permission, Plugin:cloudbees-devoptics-enabler, Plugin:warnings-ng, Plugin:job-dsl, Plugin:bouncycastle-api, Plugin:handlebars, Plugin:lockable-resources, Plugin:blueocean-web, Plugin:mailer, Plugin:blueocean-pipeline-scm-api, Plugin:forensics-api, Plugin:blueocean-bitbucket-pipeline, Plugin:git-server, Plugin:git-client, Plugin:blueocean-github-pipeline, Plugin:structs, Plugin:docker-commons, Plugin:workflow-basic-steps, Plugin:workflow-api, Plugin:jquery-detached, Plugin:configuration-as-code, Plugin:mercurial, Plugin:fortify, Plugin:clover, Plugin:github, Plugin:branch-api, Plugin:pipeline-model-declarative-agent, Plugin:workflow-durable-task-step, Plugin:github-organization-folder, Plugin:pipeline-graph-analysis, Plugin:openshift-login, Plugin:openshift-pipeline, Plugin:data-tables-api, Plugin:google-oauth-plugin, Plugin:pipeline-stage-view, Plugin:workflow-support, Plugin:kubernetes-client-api, Plugin:pipeline-model-api, Plugin:pipeline-stage-tags-metadata, Plugin:pipeline-input-step, Plugin:metrics, Plugin:pipeline-build-step, Plugin:config-file-provider, Plugin:github-api, Plugin:javadoc, Plugin:jackson2-api, Plugin:blueocean-personalization, Plugin:parameterized-trigger, Plugin:blueocean-jira, Plugin:echarts-api, Plugin:blueocean-core-js, Plugin:pipeline-rest-api, Plugin:sse-gateway, Plugin:blueocean-i18n, Plugin:maven-plugin, Plugin:blueocean-commons, Plugin:fortify-on-demand-uploader, Plugin:mapdb-api, Plugin:jenkins-design-language, Plugin:prometheus, Plugin:conditional-buildstep, Plugin:zentimestamp, Plugin:pipeline-github-lib, Plugin:favorite, Plugin:bootstrap4-api, Plugin:openshift-sync, Plugin:credentials, Plugin:blueocean-dashboard, Plugin:apache-httpcomponents-client-4-api, Plugin:jquery3-api, Plugin:ant, Plugin:pubsub-light, Plugin:pipeline-model-extensions, Plugin:matrix-project, Plugin:plugin-util-api, Plugin:workflow-cps, Plugin:blueocean-display-url, Plugin:variant, Plugin:htmlpublisher, Plugin:subversion, Plugin:timestamper, Plugin:oauth-credentials, Plugin:blueocean-config, Plugin:matrix-auth, Plugin:pipeline-stage-step, Plugin:blueocean-rest, Plugin:handy-uri-templates-2-api, Plugin:workflow-scm-step, Plugin:jobConfigHistory, Plugin:blueocean-git-pipeline, Plugin:plain-credentials, Plugin:blueocean-jwt, Plugin:okhttp-api, Plugin:blueocean-rest-impl, Plugin:checks-api, Plugin:trilead-api, Plugin:workflow-cps-global-lib, Plugin:jdk-tool, Plugin:momentjs, Plugin:jaxb, Plugin:blueocean, Plugin:analysis-model-api, Plugin:cloudbees-folder, Plugin:external-monitor-job, Plugin:workflow-multibranch, Plugin:workflow-aggregator, Plugin:view-job-filters, Plugin:windows-slaves, Plugin:font-awesome-api, Plugin:cloudbees-disk-usage-simple, Plugin:jira, Plugin:popper-api, Plugin:blueocean-pipeline-api-impl, Plugin:workflow-job, Plugin:ssh-agent, Plugin:authentication-tokens, Plugin:workflow-step-api, Plugin:template-project, Plugin:pam-auth, Plugin:extra-columns, Plugin:durable-task, Plugin:blueocean-autofavorite, Plugin:token-macro"
    }
  ],
  "labels": {
    "template": "jenkins-persistent-template"
  }
}
